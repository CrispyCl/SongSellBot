"""create_songs_and_associations_tables

Revision ID: 629feaf2bcc7
Revises: 0e3eb811fa2a
Create Date: 2025-05-06 20:22:24.709195

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "629feaf2bcc7"
down_revision: Union[str, None] = "0e3eb811fa2a"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum("dance", "mid_tempo", "slow", name="songtempo").create(op.get_bind())
    sa.Enum("universal", "male", "female", "duet", name="songtype").create(op.get_bind())
    op.create_table(
        "genres",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("title", sa.String(length=150), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "songs",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("author_id", sa.String(length=20), nullable=False),
        sa.Column("title", sa.String(length=150), nullable=False),
        sa.Column("lyrics", sa.Text(), nullable=True),
        sa.Column("file_id", sa.String(), nullable=True),
        sa.Column(
            "type",
            postgresql.ENUM("universal", "male", "female", "duet", name="songtype", create_type=False),
            nullable=False,
        ),
        sa.Column(
            "tempo", postgresql.ENUM("dance", "mid_tempo", "slow", name="songtempo", create_type=False), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["author_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "view_history",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.String(length=20), nullable=False),
        sa.Column("song_title", sa.String(length=150), nullable=False),
        sa.Column("viewed_at", sa.DateTime(), nullable=False),
        sa.Column("action", sa.String(length=20), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "genre_to_song",
        sa.Column("genre_id", sa.Integer(), nullable=False),
        sa.Column("song_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["genre_id"], ["genres.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["song_id"], ["songs.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("genre_id", "song_id"),
    )
    op.create_table(
        "wishlist",
        sa.Column("user_id", sa.String(length=20), nullable=False),
        sa.Column("song_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["song_id"], ["songs.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("user_id", "song_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("wishlist")
    op.drop_table("genre_to_song")
    op.drop_table("view_history")
    op.drop_table("songs")
    op.drop_table("genres")
    sa.Enum("universal", "male", "female", "duet", name="songtype").drop(op.get_bind())
    sa.Enum("dance", "mid_tempo", "slow", name="songtempo").drop(op.get_bind())
    # ### end Alembic commands ###
